{
  "instructions": "This JavaScript example demonstrates basic features of the Software 3 format with simple JavaScript code. The implementation shows fundamental JavaScript concepts including function declarations, template literals, and console output. The Software 3 format provides a clean separation between documentation and code, allowing developers to maintain comprehensive documentation alongside their implementation in a single file that can be easily parsed and processed by development tools.",
  "code": "// JavaScript Basic Example for Software 3\nconsole.log('Hello, Software 3!');\n\nfunction greet(name) {\n  return `Welcome to Software 3, ${name}!`;\n}\n\nfunction demonstrateFeatures() {\n  // Variable declarations\n  const format = 'Software 3';\n  let version = '1.1.8';\n  \n  // Template literals\n  console.log(`Format: ${format}, Version: ${version}`);\n  \n  // Arrow functions\n  const features = ['Simple Structure', 'JSON Format', 'Dual View'];\n  features.forEach(feature => console.log(`- ${feature}`));\n  \n  // Object creation\n  const document = {\n    type: 's3',\n    fields: ['instructions', 'code'],\n    benefits: 'Clean separation of concerns'\n  };\n  \n  return document;\n}\n\n// Execute demonstration\nconst message = greet('Developer');\nconsole.log(message);\n\nconst result = demonstrateFeatures();\nconsole.log('Document structure:', result);"
}