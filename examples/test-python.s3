{
  "instructions": "# Python Execution Test\n\nThis example demonstrates Python code execution.\n\nWhen you click the play button:\n1. The code will be executed using the Python interpreter\n2. Print output will appear in the output panel\n3. You can see results of various Python operations\n\n## Features\n- Data structures (lists, dictionaries)\n- List comprehensions\n- Functions and classes\n- String formatting",
  "code": "# Python Execution Demo\nprint('üêç Python execution started!')\nprint('=' * 40)\n\n# Basic operations\nnumbers = [1, 2, 3, 4, 5]\nprint(f'Original list: {numbers}')\n\n# List comprehensions\nsquares = [n**2 for n in numbers]\nprint(f'Squared values: {squares}')\n\nevens = [n for n in numbers if n % 2 == 0]\nprint(f'Even numbers: {evens}')\n\n# Dictionary operations\nperson = {\n    'name': 'Alice Smith',\n    'age': 28,\n    'languages': ['Python', 'JavaScript', 'Go']\n}\n\nprint(f'\\nPerson data:')\nfor key, value in person.items():\n    print(f'  {key}: {value}')\n\n# Function definition\ndef factorial(n):\n    \"\"\"Calculate factorial of n\"\"\"\n    if n <= 1:\n        return 1\n    return n * factorial(n - 1)\n\nprint(f'\\nFactorial of 5: {factorial(5)}')\n\n# Class definition\nclass Calculator:\n    @staticmethod\n    def add(a, b):\n        return a + b\n    \n    @staticmethod\n    def multiply(a, b):\n        return a * b\n\ncalc = Calculator()\nprint(f'\\nCalculator demo:')\nprint(f'  10 + 5 = {calc.add(10, 5)}')\nprint(f'  10 √ó 5 = {calc.multiply(10, 5)}')\n\n# String manipulation\ntext = 'Hello, VS Code Extension!'\nprint(f'\\nString operations:')\nprint(f'  Original: {text}')\nprint(f'  Uppercase: {text.upper()}')\nprint(f'  Words: {text.split()}')\nprint(f'  Length: {len(text)} characters')\n\n# Generate pattern\nprint('\\nPattern generation:')\nfor i in range(1, 6):\n    print('  ' + '*' * i)\n\n# Import example\nimport datetime\nnow = datetime.datetime.now()\nprint(f'\\nCurrent time: {now.strftime(\"%Y-%m-%d %H:%M:%S\")}')\n\nprint('\\n' + '=' * 40)\nprint('‚ú® Python execution completed!')\n",
  "language": "python"
}